nname: 🚀(DEV) Build | Deploy Gestión Express en Azure Web App

on:
  push:
    branches: [dev]
  workflow_dispatch:

jobs:
  build:
    name: 🏗️ (DEV) Construcción del paquete
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: 🔄 Clonar repositorio
        uses: actions/checkout@v4

      - name: 🐍 Configurar versión de Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12.4"

      - name: 📥 Instalar dependencias (validación)
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: 🧪 Verificar dependencias requeridas
        run: |
          for pkg in fastapi uvicorn gunicorn; do
            if ! pip show $pkg > /dev/null; then
              echo "❌ $pkg no está en requirements.txt o no se instaló correctamente" && exit 1
            fi
          done

      - name: 🧪 Verificar archivos clave
        run: |
          if [ ! -f main.py ]; then echo "❌ main.py no encontrado"; exit 1; fi
          if [ ! -f requirements.txt ]; then echo "❌ requirements.txt no encontrado"; exit 1; fi

      - name: 📂 Mostrar estructura del proyecto (nivel 2)
        run: |
          echo "📁 Estructura actual del proyecto:"
          tree -L 2 || ls -R

      - name: 📦 Comprimir archivos para despliegue
        run: |
          zip -r release.zip . -x "**/__pycache__/*" "**/*.pyc" "**/.DS_Store" "*.venv/*" "*.env" ".git/*" ".github/*"

      - name: 🔍 Verificar contenido del ZIP
        run: |
          unzip -l release.zip | grep -E "main\.py|requirements\.txt"

      - name: ☁️ Subir artefacto para despliegue
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: release.zip

  deploy:
    name: 🚀 (DEV) Despliegue en Azure Web App
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read

    steps:
      - name: 📥 Descargar artefacto del trabajo de construcción
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: 📂 Descomprimir paquete
        run: unzip release.zip

      - name: 📁 Mostrar estructura descomprimida
        run: |
          echo "📁 Contenido descomprimido:"
          tree -L 2 || ls -R

      - name: 🔐 Iniciar sesión en Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_15A57A74A6AF4FCDBAC6C55D19CD4DDC }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_C1AE82DC672A4EB7BB8059EC8C400D8E }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_5E8DECC7B07E4CD7B20A6F8A68B5226A }}

      - name: 👤 Ver cuenta autenticada (diagnóstico)
        run: az account show

      - name: ⚙️ Configurar entorno y comando de inicio
        run: |
          az webapp config set --name gestionconsorcioexpress2 \
            --resource-group db_gestionexpress \
            --startup-file "gunicorn main:app --workers 4 --bind=0.0.0.0 --timeout 600"

          az webapp config set --name gestionconsorcioexpress2 \
            --resource-group db_gestionexpress \
            --linux-fx-version "PYTHON|3.12"

      - name: 🔁 Reiniciar Web App antes de desplegar (previene error 409)
        run: |
          az webapp restart --name gestionconsorcioexpress2 --resource-group db_gestionexpress

      - name: 🧪 Verificar punto de entrada antes del despliegue
        run: |
          if [ ! -f main.py ]; then
            echo "❌ main.py no encontrado en el paquete" && exit 1
          fi

      - name: 🚀 Desplegar en Azure Web App (ZIP Deploy)
        uses: azure/webapps-deploy@v3
        with:
          app-name: "gestionconsorcioexpress2"
          slot-name: "Production"
          package: .

      - name: 📜 Leer logs de Oryx si falla el despliegue
        if: failure()
        run: |
          echo "❗ Despliegue fallido. Leyendo logs Oryx:"
          curl -s "https://gestionconsorcioexpress2.scm.azurewebsites.net/api/logs/oryx-build.log" || echo "No se pudo acceder a los logs"
          echo "🧾 Logs adicionales en Kudu: https://gestionconsorcioexpress2.scm.azurewebsites.net/DebugConsole"

      - name: ✅ Verificar endpoint de FastAPI (GET /)
        run: |
          echo "⌛ Esperando 15 segundos a que la app arranque..."
          sleep 15
          curl -f https://gestionconsorcioexpress2.azurewebsites.net || echo "⚠️ La app no respondió exitosamente"
